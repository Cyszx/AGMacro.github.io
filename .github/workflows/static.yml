name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Fetch Latest Release Info
        id: latest_release
        run: |
          echo "Debug: Starting release info fetch..."
          
          # Fetch CysMacros Release
          echo "Debug: Fetching CysMacros release..."
          MACRO_RELEASE=$(curl -s -H "Accept: application/vnd.github+json" https://api.github.com/repos/Cyszx/AGMacro.github.io/releases/latest)        
          echo "Debug: CysMacros Release response: $MACRO_RELEASE" 
          
          if [[ $(echo "$MACRO_RELEASE" | jq 'has("message")') == "true" && $(echo "$MACRO_RELEASE" | jq -r '.message') == "Not Found" ]]; then
            echo "Debug: CysMacros repository or release not found"
            echo "MACRO_ZIP_NAME=Not Available" >> $GITHUB_ENV
            echo "MACRO_DOWNLOAD_URL=#" >> $GITHUB_ENV
          elif [[ $(echo "$MACRO_RELEASE" | jq 'has("assets")') == "true" ]]; then
            echo "Debug: Found CysMacros release with assets"
            MACRO_ZIP=$(echo "$MACRO_RELEASE" | jq -r '.assets[] | select(.name | endswith(".zip")) | {name: .name, url: .browser_download_url}' | jq -s '.[0]')
            
            if [[ ! -z "$MACRO_ZIP" && "$MACRO_ZIP" != "null" ]]; then
              MACRO_NAME=$(echo "$MACRO_ZIP" | jq -r '.name')
              MACRO_URL=$(echo "$MACRO_ZIP" | jq -r '.url')
              echo "MACRO_ZIP_NAME=$MACRO_NAME" >> $GITHUB_ENV
              echo "MACRO_DOWNLOAD_URL=$MACRO_URL" >> $GITHUB_ENV
              echo "Debug: CysMacros variables set - Name: $MACRO_NAME, URL: $MACRO_URL"
            else
              echo "Debug: No CysMacros ZIP found"
              echo "MACRO_ZIP_NAME=No ZIP Available" >> $GITHUB_ENV
              echo "MACRO_DOWNLOAD_URL=#" >> $GITHUB_ENV
            fi
          else
            echo "Debug: No valid CysMacros release or assets found"
            echo "MACRO_ZIP_NAME=Not Available" >> $GITHUB_ENV
            echo "MACRO_DOWNLOAD_URL=#" >> $GITHUB_ENV
          fi

          # Fetch Anime Royale Release
          echo "Debug: Fetching Anime Royale release..."
          ANIME_RELEASE=$(curl -s -H "Accept: application/vnd.github+json" https://api.github.com/repos/Cyszx/Anime-Royale-Macro/releases/latest)
          echo "Debug: Anime Royale Release response: $ANIME_RELEASE"
          
          if [[ $(echo "$ANIME_RELEASE" | jq 'has("message")') == "true" && $(echo "$ANIME_RELEASE" | jq -r '.message') == "Not Found" ]]; then
            echo "Debug: Anime Royale repository or release not found"
            echo "ANIME_ZIP_NAME=Not Available" >> $GITHUB_ENV
            echo "ANIME_DOWNLOAD_URL=#" >> $GITHUB_ENV
          elif [[ $(echo "$ANIME_RELEASE" | jq 'has("assets")') == "true" ]]; then
            echo "Debug: Found Anime Royale release with assets"
            ANIME_ZIP=$(echo "$ANIME_RELEASE" | jq -r '.assets[] | select(.name | endswith(".zip")) | {name: .name, url: .browser_download_url}' | jq -s '.[0]')
            
            if [[ ! -z "$ANIME_ZIP" && "$ANIME_ZIP" != "null" ]]; then
              ANIME_NAME=$(echo "$ANIME_ZIP" | jq -r '.name')
              ANIME_URL=$(echo "$ANIME_ZIP" | jq -r '.url')
              echo "ANIME_ZIP_NAME=$ANIME_NAME" >> $GITHUB_ENV
              echo "ANIME_DOWNLOAD_URL=$ANIME_URL" >> $GITHUB_ENV
              echo "Debug: Anime Royale variables set - Name: $ANIME_NAME, URL: $ANIME_URL"
            else
              echo "Debug: No Anime Royale ZIP found"
              echo "ANIME_ZIP_NAME=No ZIP Available" >> $GITHUB_ENV
              echo "ANIME_DOWNLOAD_URL=#" >> $GITHUB_ENV
            fi
          else
            echo "Debug: No valid Anime Royale release or assets found"
            echo "ANIME_ZIP_NAME=Not Available" >> $GITHUB_ENV
            echo "ANIME_DOWNLOAD_URL=#" >> $GITHUB_ENV
          fi

      - name: Create Dynamic Download Page
        run: |
          echo "Debug: Creating download page..."
          # Create directory if it doesn't exist
          mkdir -p _site
          
          # Create the index.html file in the _site directory
          cat > _site/index.html << EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <meta name="description" content="Download Cys Macros for various anime games - Enhance your gaming experience">
            <title>Cys Macros</title>
            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
            <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              
              :root {
                --primary: #4CAF50;
                --primary-dark: #45a049;
                --text: #ffffff;
                --text-secondary: #cccccc;
                --bg-dark: #0a0a2e;
                --card-bg: rgba(255, 255, 255, 0.1);
                --card-border: rgba(255, 255, 255, 0.1);
              }

              body {
                background: radial-gradient(circle at top right, #1a1a4a, var(--bg-dark));
                font-family: "Poppins", sans-serif;
                min-height: 100vh;
                color: var(--text);
                padding: 40px 20px;
                position: relative;
                overflow-x: hidden;
              }

              body::before {
                content: '';
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: 
                  radial-gradient(circle at 20% 20%, rgba(76, 175, 80, 0.1) 0%, transparent 40%),
                  radial-gradient(circle at 80% 80%, rgba(76, 175, 80, 0.1) 0%, transparent 40%);
                pointer-events: none;
                z-index: -1;
              }

              .container {
                max-width: 1200px;
                margin: 0 auto;
                text-align: center;
                position: relative;
                z-index: 1;
              }

              .header {
                margin-bottom: 60px;
                position: relative;
              }

              h1 {
                font-size: 4rem;
                font-weight: 700;
                background: linear-gradient(45deg, var(--text), var(--primary));
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                margin-bottom: 20px;
                position: relative;
                display: inline-block;
              }

              h1::after {
                content: '';
                position: absolute;
                bottom: -10px;
                left: 50%;
                transform: translateX(-50%);
                width: 100px;
                height: 4px;
                background: linear-gradient(90deg, transparent, var(--primary), transparent);
              }

              .description {
                font-size: 1.2rem;
                margin: 20px auto 40px;
                color: var(--text-secondary);
                max-width: 600px;
                line-height: 1.6;
              }

              .games-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
                gap: 40px;
                margin-top: 40px;
                padding: 20px;
              }

              .game-card {
                background: var(--card-bg);
                border: 1px solid var(--card-border);
                border-radius: 24px;
                padding: 40px 30px;
                backdrop-filter: blur(12px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                transition: all 0.4s ease;
                position: relative;
                overflow: hidden;
              }

              .game-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(circle at top right, 
                  rgba(76, 175, 80, 0.1), 
                  transparent 70%);
                opacity: 0;
                transition: opacity 0.4s ease;
              }

              .game-card:hover {
                transform: translateY(-10px);
                border-color: rgba(76, 175, 80, 0.3);
              }

              .game-card:hover::before {
                opacity: 1;
              }

              .game-title {
                font-size: 2rem;
                font-weight: 600;
                margin-bottom: 20px;
                color: var(--text);
                position: relative;
              }

              .game-title::after {
                content: '';
                display: block;
                width: 40px;
                height: 3px;
                background: var(--primary);
                margin: 15px auto;
                border-radius: 2px;
                transition: width 0.3s ease;
              }

              .game-card:hover .game-title::after {
                width: 60px;
              }

              .game-description {
                color: var(--text-secondary);
                margin: 20px 0;
                font-size: 1rem;
                line-height: 1.6;
              }

              .download-button {
                display: inline-flex;
                align-items: center;
                justify-content: center;
                gap: 10px;
                background: linear-gradient(45deg, var(--primary), var(--primary-dark));
                color: white;
                padding: 16px 32px;
                font-size: 1.1rem;
                border-radius: 16px;
                text-decoration: none;
                font-weight: 600;
                transition: all 0.3s ease;
                border: none;
                cursor: pointer;
                margin-top: 25px;
                position: relative;
                overflow: hidden;
              }

              .download-button::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                transform: translateX(-100%);
                transition: transform 0.6s ease;
              }

              .download-button:hover {
                transform: translateY(-3px) scale(1.02);
                box-shadow: 0 10px 20px rgba(76, 175, 80, 0.3);
              }

              .download-button:hover::before {
                transform: translateX(100%);
              }

              .version-tag {
                margin-top: 20px;
                font-size: 0.9rem;
                background: rgba(76, 175, 80, 0.1);
                padding: 8px 16px;
                border-radius: 12px;
                border: 1px solid rgba(76, 175, 80, 0.2);
                display: inline-flex;
                align-items: center;
                gap: 6px;
              }

              .version-tag i {
                color: var(--primary);
              }

              .not-available {
                color: var(--text-secondary);
                font-style: italic; 
                padding: 15px;
                background: rgba(255, 255, 255, 0.05);
                border-radius: 12px;
                margin-top: 20px;
                display: inline-flex;
                align-items: center;
                gap: 8px;
              }

              @media (max-width: 768px) {
                h1 { font-size: 3rem; }
                .description { font-size: 1.1rem; }
                .games-grid { padding: 10px; }
                .game-card { padding: 30px 20px; }
              }

              @media (max-width: 480px) {
                h1 { font-size: 2.5rem; }
                .description { font-size: 1rem; }
                .game-title { font-size: 1.8rem; }
              }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>Cys Macros</h1>
                <p class="description">Download the latest version of Cys Macros to enhance your gaming experience!</p>
              </div>
              
              <div class="games-grid">
                <!-- CysMacros Card -->
                <div class="game-card">
                  <h2 class="game-title">CysMacros</h2>
                  <p class="game-description">Anime Guardians Macro</p>
                  \${MACRO_DOWNLOAD_URL == "#" ? '<div class="not-available"><i class="fas fa-info-circle"></i> Download currently unavailable</div>' : '<a href="\${MACRO_DOWNLOAD_URL}" class="download-button" download><i class="fas fa-download"></i> Download Now</a>'}
                  <div class="version-tag"><i class="fas fa-code-branch"></i> \${MACRO_ZIP_NAME}</div>
                </div>

                <!-- Anime Royale Card -->
                <div class="game-card">
                  <h2 class="game-title">Anime Royale</h2>
                  <p class="game-description">Anime Royale Macro</p>
                  \${ANIME_DOWNLOAD_URL == "#" ? '<div class="not-available"><i class="fas fa-info-circle"></i> Download currently unavailable</div>' : '<a href="\${ANIME_DOWNLOAD_URL}" class="download-button" download><i class="fas fa-download"></i> Download Now</a>'}
                  <div class="version-tag"><i class="fas fa-code-branch"></i> \${ANIME_ZIP_NAME}</div>
                </div>
              </div>
            </div>
          </body>
          </html>
          EOF
          
          echo "Debug: Checking created files..."
          ls -la _site/
          cat _site/index.html | head -n 5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
